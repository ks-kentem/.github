name: Teamsにチャットを送信

on:
  workflow_call:
    inputs:
      send_to_email:
        required: false
        type: string
      send_to_username:
        required: false
        type: string
      title:
        required: true
        type: string
      repository:
        required: true
        type: string
      event:
        required: true
        type: string
      event_url:
        required: false
        type: string
      message:
        required: true
        type: string
    secrets:
      WEBHOOK_URL:
        required: true

jobs:
  notify-teams:
    runs-on: ubuntu-latest
    steps:
      - name: 送信先（メールアドレス）を設定する
        id: set_email
        run: |
          # inputs.send_to_emailが設定されていればそれを使用
          EMAIL="${{ inputs.send_to_email }}"
          
          # メールアドレスが指定されていなければユーザー名から推測する
          if [[ -z "$EMAIL" ]]; then
            echo "メールアドレスが指定されていないため、ユーザー名から推測します。"
            USERNAME="${{ inputs.send_to_username }}"
            
            # kentem- から始まっている場合はメールアドレスに変換
            if [[ "$USERNAME" == kentem-* ]]; then
              USER_PART="${USERNAME#*-}"
              EMAIL="${USER_PART}@kentem.co.jp"
            fi
          fi
          
          # メールアドレスが最終的に見つからなければ、ジョブをスキップする
          if [[ -z "$EMAIL" ]]; then
            echo "::notice::kentem-から始まっていないユーザーなので通知をスキップします: $USERNAME"
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "::notice::生成されたメールアドレス: $EMAIL"
            echo "email=$EMAIL" >> "$GITHUB_OUTPUT"
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi
        shell: bash

      - name: GitHubユーザー名をメールアドレスに変換してTeamsの個人チャットへ通知する
        if: steps.set_email.outputs.skip == 'false'
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          EMAIL="${{ steps.set_email.outputs.email }}"
          TITLE="${{ inputs.title }}"
          REPOSITORY="${{ inputs.repository }}"
          REPOSITORY_URL="https://github.com/ks-kentem/${{ inputs.repository }}"
          EVENT="${{ inputs.event }}"
          EVENT_URL="${{ inputs.event_url }}"
          MESSAGE="${{ inputs.message }}"

          echo "Generated email: $EMAIL"

          # Power Automate Webhook に送信
          curl -X POST "$WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d @- <<EOF
          {
            "send_to": "$EMAIL",
            "title": "$TITLE",
            "repository": "$REPOSITORY",
            "repository_url": "$REPOSITORY_URL",
            "event": "$EVENT",
            "event_url": "$EVENT_URL",
            "message": "$MESSAGE"
          }
          EOF
